["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$catvec","~$clojure.core.rrb-vector","~$<?resolve","~$hitchhiker.tree.core","~$<?","^8","~$go-try","^8"],"~:excludes",["~#set",["~$subvec"]],"~:name","~$hitchhiker.tree.messaging","~:imports",null,"~:requires",["^ ","^6","^6","~$hasch.core","^B","~$async","~$cljs.core.async","^D","^D","~$core","^8","^8","^8"],"~:uses",["^ ","~$uuid","^B","^5","^6"],"~:defs",["^ ","~$forward-iterator",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","~:line",269,"~:column",11,"~:end-line",269,"~:end-column",27,"~:arglists",["~#list",["~$quote",["^R",[["~$iter-ch","~$path","~$start-key"]]]]],"~:doc","Takes the result of a search and puts the iterated elements onto iter-ch\n  going forward over the tree as needed. Does lg(n) backtracking sometimes."],"^>","~$hitchhiker.tree.messaging/forward-iterator","~:variadic",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",27,"~:method-params",["^R",[["^T","^U","^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^N",5,"^M",269,"^O",269,"~:max-fixed-arity",3,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["^T","^U","^V"]]]]],"^W","Takes the result of a search and puts the iterated elements onto iter-ch\n  going forward over the tree as needed. Does lg(n) backtracking sometimes."],"~$IOperation",["^ ","^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",19,"^N",14,"^O",19,"^P",24,"^W",null,"~:protocol-symbol",true,"~:jsdoc",["^R",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$affects-key",[["~$op"]],"~$apply-op-to-coll",[["^19","~$coll"]],"~$apply-op-to-tree",[["^19","~$tree"]]]]],"^14",true,"^>","~$hitchhiker.tree.messaging/IOperation","^L","out/hitchhiker/tree/messaging.cljc","^P",24,"^N",1,"^M",19,"^16",["^ ","^17",["^ ","^18",[["^19"]],"^1:",[["^19","^1;"]],"^1<",[["^19","^1="]]]],"~:info",null,"^O",19,"~:tag","~$any","~:impls",["^<",["~$hitchhiker.tree.messaging/InsertOp","~$hitchhiker.tree.messaging/DeleteOp"]],"^W",null,"^15",["^R",["@interface"]]],"~$InsertOp",["^ ","~:num-fields",2,"~:protocols",["^<",["~$cljs.core/IRecord","^1>","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^>","^1C","^L","out/hitchhiker/tree/messaging.cljc","^P",20,"~:type",true,"^N",12,"~:internal-ctor",true,"^M",24,"~:record",true,"^O",24,"~:skip-protocol-flag",["^<",["^1H","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1R","^1S","^1T","^1U"]]],"~$map->InsertOp",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",24,"^N",12,"^O",24,"^P",20,"^1W",true,"~:factory","~:map","^Q",["^R",["^S",["^R",[["~$G__42326"]]]]]],"^>","~$hitchhiker.tree.messaging/map->InsertOp","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^Z",["^R",[["^21"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^1W",true,"^1[","^20","^M",24,"^O",24,"^11",1,"^12",true,"^Q",["^R",["^S",["^R",[["^21"]]]]]],"~$insert",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",230,"^N",7,"^O",230,"^P",13,"^Q",["^R",["^S",["^R",[["^1=","~$key","~$value"]]]]]],"^>","~$hitchhiker.tree.messaging/insert","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",13,"^Z",["^R",[["^1=","^24","^25"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",230,"^O",230,"^11",3,"^12",true,"^Q",["^R",["^S",["^R",[["^1=","^24","^25"]]]]]],"~$->DeleteOp",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",30,"^N",12,"^O",30,"^P",20,"^1W",true,"^1[","~:positional","^Q",["^R",["^S",["^R",[["^24"]]]]]],"^>","~$hitchhiker.tree.messaging/->DeleteOp","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^Z",["^R",[["^24"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^1W",true,"^1[","^28","^M",30,"^O",30,"^11",1,"^12",true,"^Q",["^R",["^S",["^R",[["^24"]]]]]],"^18",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",20,"^N",4,"^O",20,"^P",15,"~:protocol","^1>","^W","Which key this affects--currently must be a single key","^Q",["^R",["^S",["^R",[["^19"]]]]]],"^2:","^1>","^>","~$hitchhiker.tree.messaging/affects-key","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",15,"^Z",["^R",[["^19"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",19,"^O",20,"^11",1,"^12",true,"^Q",["^R",["^S",["^R",[["^19"]]]]],"^W","Which key this affects--currently must be a single key"],"~$lookup",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",221,"^N",7,"^O",221,"^P",13,"^Q",["^R",["^S",["^R",[["^1=","^24"],["^1=","^24","~$not-found"]]]]],"~:top-fn",["^ ","^Y",false,"^11",3,"^Z",["^R",[["^1=","^24"],["^1=","^24","^2="]]],"^Q",["^R",[["^1=","^24"],["^1=","^24","^2="]]],"^10",["^R",[null,null]]]],"^>","~$hitchhiker.tree.messaging/lookup","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",13,"^2>",["^ ","^Y",false,"^11",3,"^Z",["^R",[["^1=","^24"],["^1=","^24","^2="]]],"^Q",["^R",[["^1=","^24"],["^1=","^24","^2="]]],"^10",["^R",[null,null]]],"^Z",["^R",[["^1=","^24"],["^1=","^24","^2="]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",221,"^O",221,"^11",3,"^12",true,"^Q",["^R",[["^1=","^24"],["^1=","^24","^2="]]]],"^1<",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",22,"^N",4,"^O",22,"^P",20,"^2:","^1>","^W","Applies the operation to the tree. Returns go-block.","^Q",["^R",["^S",["^R",[["^19","^1="]]]]]],"^2:","^1>","^>","~$hitchhiker.tree.messaging/apply-op-to-tree","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^Z",["^R",[["^19","^1="]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",19,"^O",22,"^11",2,"^12",true,"^Q",["^R",["^S",["^R",[["^19","^1="]]]]],"^W","Applies the operation to the tree. Returns go-block."],"^1:",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",21,"^N",4,"^O",21,"^P",20,"^2:","^1>","^W","Applies the operation to the collection","^Q",["^R",["^S",["^R",[["^19","^1;"]]]]]],"^2:","^1>","^>","~$hitchhiker.tree.messaging/apply-op-to-coll","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^Z",["^R",[["^19","^1;"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",19,"^O",21,"^11",2,"^12",true,"^Q",["^R",["^S",["^R",[["^19","^1;"]]]]],"^W","Applies the operation to the collection"],"~$lookup-fwd-iter",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",285,"^N",12,"^O",285,"^P",27,"^Q",["^R",["^S",["^R",[["^1=","^24"]]]]],"^W","Compatibility helper to clojure sequences. Please prefer the channel\n  interface of forward-iterator, as this function blocks your thread, which\n  disturbs async contexts and might lead to poor performance. It is mainly here\n  to facilitate testing or for exploration on the REPL."],"^>","~$hitchhiker.tree.messaging/lookup-fwd-iter","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",27,"^Z",["^R",[["^1=","^24"]]],"^[",null,"^10",["^R",[null,null]],"^N",6,"^M",285,"^O",285,"^11",2,"^12",true,"^Q",["^R",["^S",["^R",[["^1=","^24"]]]]],"^W","Compatibility helper to clojure sequences. Please prefer the channel\n  interface of forward-iterator, as this function blocks your thread, which\n  disturbs async contexts and might lead to poor performance. It is mainly here\n  to facilitate testing or for exploration on the REPL."],"~$DeleteOp",["^ ","^1F",1,"^1G",["^<",["^1H","^1>","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1Q","^1R","^1S","^1T","^1U"]],"^>","^1D","^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^1V",true,"^N",12,"^1W",true,"^M",30,"^1X",true,"^O",30,"^1Y",["^<",["^1H","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1R","^1S","^1T","^1U"]]],"~$general-max",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",152,"^N",7,"^O",152,"^P",18,"^Q",["^R",["^S",["^R",[["~$e","~$&","~$r"]]]]],"^2>",["^ ","^Y",true,"^11",1,"^Z",[["^R",["~$e","~$r"]]],"^Q",["^R",[["~$e","~$&","~$r"]]],"^10",["^R",[null]]]],"^>","~$hitchhiker.tree.messaging/general-max","^Y",true,"^L","out/hitchhiker/tree/messaging.cljc","^P",18,"^2>",["^ ","^Y",true,"^11",1,"^Z",[["^R",["~$e","~$r"]]],"^Q",["^R",[["~$e","~$&","~$r"]]],"^10",["^R",[null]]],"^Z",[["^R",["~$e","~$r"]]],"^[",null,"^10",["^R",[null]],"^N",1,"^M",152,"^O",152,"^11",1,"^12",true,"^Q",["^R",[["~$e","~$&","~$r"]]]],"~$delete",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",236,"^N",7,"^O",236,"^P",13,"^Q",["^R",["^S",["^R",[["^1=","^24"]]]]]],"^>","~$hitchhiker.tree.messaging/delete","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",13,"^Z",["^R",[["^1=","^24"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",236,"^O",236,"^11",2,"^12",true,"^Q",["^R",["^S",["^R",[["^1=","^24"]]]]]],"~$enqueue",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",74,"^N",7,"^O",74,"^P",14,"^Q",["^R",["^S",["^R",[["^1=","~$msgs"],["^1=","^2J","~$deferred-ops"]]]]],"^2>",["^ ","^Y",false,"^11",3,"^Z",["^R",[["^1=","^2J"],["^1=","^2J","^2K"]]],"^Q",["^R",[["^1=","^2J"],["^1=","^2J","^2K"]]],"^10",["^R",[null,null]]]],"^>","~$hitchhiker.tree.messaging/enqueue","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",14,"^2>",["^ ","^Y",false,"^11",3,"^Z",["^R",[["^1=","^2J"],["^1=","^2J","^2K"]]],"^Q",["^R",[["^1=","^2J"],["^1=","^2J","^2K"]]],"^10",["^R",[null,null]]],"^Z",["^R",[["^1=","^2J"],["^1=","^2J","^2K"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",74,"^O",74,"^11",3,"^12",true,"^Q",["^R",[["^1=","^2J"],["^1=","^2J","^2K"]]]],"~$->InsertOp",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",24,"^N",12,"^O",24,"^P",20,"^1W",true,"^1[","^28","^Q",["^R",["^S",["^R",[["^24","^25"]]]]]],"^>","~$hitchhiker.tree.messaging/->InsertOp","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^Z",["^R",[["^24","^25"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^1W",true,"^1[","^28","^M",24,"^O",24,"^11",2,"^12",true,"^Q",["^R",["^S",["^R",[["^24","^25"]]]]]],"~$apply-ops-in-path",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",163,"^N",7,"^O",163,"^P",24,"^Q",["^R",["^S",["^R",[["^U"]]]]]],"^>","~$hitchhiker.tree.messaging/apply-ops-in-path","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",24,"^Z",["^R",[["^U"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^M",163,"^O",163,"^11",1,"^12",true,"^Q",["^R",["^S",["^R",[["^U"]]]]]],"~$map->DeleteOp",["^ ","^J",null,"^K",["^ ","^L","/home/bamarco/dev/datsync/out/hitchhiker/tree/messaging.cljc","^M",30,"^N",12,"^O",30,"^P",20,"^1W",true,"^1[","^20","^Q",["^R",["^S",["^R",[["~$G__42334"]]]]]],"^>","~$hitchhiker.tree.messaging/map->DeleteOp","^Y",false,"^L","out/hitchhiker/tree/messaging.cljc","^P",20,"^Z",["^R",[["^2R"]]],"^[",null,"^10",["^R",[null,null]],"^N",1,"^1W",true,"^1[","^20","^M",30,"^O",30,"^11",1,"^12",true,"^Q",["^R",["^S",["^R",[["^2R"]]]]]]],"~:require-macros",["^ ","^8","^8","^E","^8"],"~:cljs.analyzer/constants",["^ ","~:seen",["^<",["~:children","~:key","~:value","^24","^25","^1@","~:clj","~:op-buf"]],"~:order",["^2X","^2Y","^24","^25","^2W","^2[","^1@","^2Z"]],"^W",null]