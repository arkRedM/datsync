["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ "],"~$Error",["^ "]],"~:use-macros",["^ ","~$PEDNAsyncKeyValueStore","~$konserve.protocols","~$go","~$cljs.core.async.macros","~$PBinaryAsyncKeyValueStore","^7","~$-update-in","^7"],"~:excludes",["~#set",[]],"~:name","~$konserve.memory","~:imports",null,"~:requires",["^ ","^7","^7"],"~:uses",["^ ","^6","^7","^:","^7","^;","^7"],"~:defs",["^ ","~$MemoryStore",["^ ","~:num-fields",4,"~:protocols",["^=",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$konserve.protocols/PEDNAsyncKeyValueStore","~$konserve.protocols/PBinaryAsyncKeyValueStore","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^>","~$konserve.memory/MemoryStore","~:file","out/konserve/memory.cljc","~:end-column",23,"~:type",true,"~:column",12,"~:internal-ctor",true,"~:line",9,"~:record",true,"~:end-line",9,"~:skip-protocol-flag",["^=",["^G","^H","^I","^J","^K","^L","^M","^N","^O","^S","^T","^U","^V"]]],"~$->MemoryStore",["^ ","~:protocol-inline",null,"~:meta",["^ ","^X","/home/bamarco/dev/datsync/out/konserve/memory.cljc","^11",9,"^[",12,"^13",9,"^Y",23,"^10",true,"~:factory","~:positional","~:arglists",["~#list",["~$quote",["^1;",[["~$state","~$read-handlers","~$write-handlers","~$locks"]]]]]],"^>","~$konserve.memory/->MemoryStore","~:variadic",false,"^X","out/konserve/memory.cljc","^Y",23,"~:method-params",["^1;",[["^1=","^1>","^1?","^1@"]]],"~:protocol-impl",null,"~:arglists-meta",["^1;",[null,null]],"^[",1,"^10",true,"^18","^19","^11",9,"^13",9,"~:max-fixed-arity",4,"~:fn-var",true,"^1:",["^1;",["^1<",["^1;",[["^1=","^1>","^1?","^1@"]]]]]],"~$map->MemoryStore",["^ ","^16",null,"^17",["^ ","^X","/home/bamarco/dev/datsync/out/konserve/memory.cljc","^11",9,"^[",12,"^13",9,"^Y",23,"^10",true,"^18","~:map","^1:",["^1;",["^1<",["^1;",[["~$G__45625"]]]]]],"^>","~$konserve.memory/map->MemoryStore","^1B",false,"^X","out/konserve/memory.cljc","^Y",23,"^1C",["^1;",[["^1J"]]],"^1D",null,"^1E",["^1;",[null,null]],"^[",1,"^10",true,"^18","^1I","^11",9,"^13",9,"^1F",1,"^1G",true,"^1:",["^1;",["^1<",["^1;",[["^1J"]]]]]],"~$new-mem-store",["^ ","^16",null,"^17",["^ ","^X","/home/bamarco/dev/datsync/out/konserve/memory.cljc","^11",32,"^[",7,"^13",32,"^Y",20,"^1:",["^1;",["^1<",["^1;",[[],["~$init-atom"]]]]],"~:doc","Create in memory store. Binaries are not properly locked yet and\n  the read and write-handlers are dummy ones for compatibility.","~:top-fn",["^ ","^1B",false,"^1F",1,"^1C",["^1;",[[],["^1M"]]],"^1:",["^1;",[[],["^1M"]]],"^1E",["^1;",[null,null]]]],"^>","~$konserve.memory/new-mem-store","^1B",false,"^X","out/konserve/memory.cljc","^Y",20,"^1O",["^ ","^1B",false,"^1F",1,"^1C",["^1;",[[],["^1M"]]],"^1:",["^1;",[[],["^1M"]]],"^1E",["^1;",[null,null]]],"^1C",["^1;",[[],["^1M"]]],"^1D",null,"^1E",["^1;",[null,null]],"^[",1,"^11",32,"^13",32,"^1F",1,"^1G",true,"^1:",["^1;",[[],["^1M"]]],"^1N","Create in memory store. Binaries are not properly locked yet and\n  the read and write-handlers are dummy ones for compatibility."]],"~:require-macros",["^ ","^9","^9"],"~:cljs.analyzer/constants",["^ ","~:seen",["^=",["~:input-stream","~:else","~:locks","~:unknown","~:recur","~:state","^1@","~:size","~:write-handlers","~:read-handlers","^1=","^1?","^1>"]],"~:order",["^1Y","^20","^1[","^1V","^1X","^1U","^1T","^1Z","^1W","^1=","^1>","^1?","^1@"]],"^1N","Address globally aggregated immutable key-value store(s)."]