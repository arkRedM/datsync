["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Object",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros","~$go-loop","^7"],"~:excludes",["~#set",[]],"~:name","~$dat.remote.impl.sente","~:imports",null,"~:requires",["^ ","~$sente","~$taoensso.sente","~$dat.sync.client","^A","~$sente-transit","~$taoensso.sente.packers.transit","~$log","~$taoensso.timbre","~$reactor","~$dat.reactor","~$async","~$cljs.core.async","~$dat.spec.protocols","^J","^I","^I","~$protocols","^J","~$com.stuartsierra.component","^L","^@","^@","^G","^G","^C","^C","~$component","^L","~$sync","^A","~$dat.sync.utils","^O","^E","^E","~$utils","^O"],"~:uses",["^ ","~$cat-into","^O"],"~:defs",["^ ","~$new-sente-remote",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","~:line",146,"~:column",7,"~:end-line",146,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^11",[[],["~$options"]]]]],"~:doc","Options include `:sente-options`, which is passed as the second argument to `sente/make-channel-socket!`.\n  Additionally, the `:chsk-route` option of the `:sente-options` map is passed as the first argument to\n  `sente/make-channel-socket!`, assuming you don't want to use the default (`\"chsk\"`). You can see all\n  datsync defaults for these options in `default-sente-options`.\n\n  Additionally, note that you can specify via the options map your own `:event-chan`, which is the channel on which\n  output messages get put (the result of calling `dat.spec.protocols/remote-event-chan` on this system component).","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",1,"~:method-params",["^11",[[],["^13"]]],"^10",["^11",[[],["^13"]]],"~:arglists-meta",["^11",[null,null]]]],"^;","~$dat.remote.impl.sente/new-sente-remote","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",23,"^15",["^ ","^16",false,"^17",1,"^18",["^11",[[],["^13"]]],"^10",["^11",[[],["^13"]]],"^19",["^11",[null,null]]],"^18",["^11",[[],["^13"]]],"~:protocol-impl",null,"^19",["^11",[null,null]],"^Y",1,"^X",146,"^Z",146,"^17",1,"~:fn-var",true,"^10",["^11",[[],["^13"]]],"^14","Options include `:sente-options`, which is passed as the second argument to `sente/make-channel-socket!`.\n  Additionally, the `:chsk-route` option of the `:sente-options` map is passed as the first argument to\n  `sente/make-channel-socket!`, assuming you don't want to use the default (`\"chsk\"`). You can see all\n  datsync defaults for these options in `default-sente-options`.\n\n  Additionally, note that you can specify via the options map your own `:event-chan`, which is the channel on which\n  output messages get put (the result of calling `dat.spec.protocols/remote-event-chan` on this system component)."],"~$go-sente-send!",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",63,"^Y",7,"^Z",63,"^[",21,"^10",["^11",["^12",["^11",[["~$send>","~$sock"],["^1>",["^ ","~:as","~$sente-sock","~:keys",["~$send-fn","~$connected-uids"]],"~$retries"]]]]],"^15",["^ ","^16",false,"^17",3,"^18",["^11",[["^1>","^1?"],["^1>",["^ ","^1@","^1A","^1B",["^1C","^1D"]],"^1E"]]],"^10",["^11",[["^1>","^1?"],["^1>",["^ ","^1@","^1A","^1B",["^1C","^1D"]],"^1E"]]],"^19",["^11",[null,null]]]],"^;","~$dat.remote.impl.sente/go-sente-send!","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",21,"^15",["^ ","^16",false,"^17",3,"^18",["^11",[["^1>","^1?"],["^1>",["^ ","^1@","^1A","^1B",["^1C","^1D"]],"^1E"]]],"^10",["^11",[["^1>","^1?"],["^1>",["^ ","^1@","^1A","^1B",["^1C","^1D"]],"^1E"]]],"^19",["^11",[null,null]]],"^18",["^11",[["^1>","^1?"],["^1>",["^ ","^1@","^1A","^1B",["^1C","^1D"]],"^1E"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",1,"^X",63,"^Z",63,"^17",3,"^1<",true,"^10",["^11",[["^1>","^1?"],["^1>",["^ ","^1@","^1A","^1B",["^1C","^1D"]],"^1E"]]]],"~$map->DBFn",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",23,"^Y",18,"^Z",23,"^[",22,"~:internal-ctor",true,"~:factory","~:map","^10",["^11",["^12",["^11",[["~$G__57197"]]]]]],"^;","~$dat.remote.impl.sente/map->DBFn","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",22,"^18",["^11",[["^1K"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",7,"^1H",true,"^1I","^1J","^X",23,"^Z",23,"^17",1,"^1<",true,"^10",["^11",["^12",["^11",[["^1K"]]]]]],"~$SenteRemote",["^ ","~:num-fields",6,"~:protocols",["^:",["~$cljs.core/IRecord","~$dat.spec.protocols/PRemoteEventChan","~$dat.spec.protocols/PRemoteSendEvent","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$dat.spec.protocols/RingSock","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$dat.spec.protocols/Wire","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$com.stuartsierra.component/Lifecycle","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^;","~$dat.remote.impl.sente/SenteRemote","^W","src/cljc/dat/remote/impl/sente.cljc","^[",23,"~:type",true,"^Y",12,"^1H",true,"^X",80,"~:record",true,"^Z",80,"~:skip-protocol-flag",["^:",["^1P","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1[","^22","^23","^25","^26"]]],"~$->DBFn",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",23,"^Y",18,"^Z",23,"^[",22,"^1H",true,"^1I","~:positional","^10",["^11",["^12",["^11",[["~$lang","~$params","~$code"]]]]]],"^;","~$dat.remote.impl.sente/->DBFn","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",22,"^18",["^11",[["^2=","^2>","^2?"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",7,"^1H",true,"^1I","^2<","^X",23,"^Z",23,"^17",3,"^1<",true,"^10",["^11",["^12",["^11",[["^2=","^2>","^2?"]]]]]],"~$->SenteRemote",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",80,"^Y",12,"^Z",80,"^[",23,"^1H",true,"^1I","^2<","^10",["^11",["^12",["^11",[["~$sente-options","^1>","~$recv>","^1A","~$stop-remote","~$server?"]]]]]],"^;","~$dat.remote.impl.sente/->SenteRemote","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",23,"^18",["^11",[["^2B","^1>","^2C","^1A","^2D","^2E"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",1,"^1H",true,"^1I","^2<","^X",80,"^Z",80,"^17",6,"^1<",true,"^10",["^11",["^12",["^11",[["^2B","^1>","^2C","^1A","^2D","^2E"]]]]]],"~$map->SenteRemote",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",80,"^Y",12,"^Z",80,"^[",23,"^1H",true,"^1I","^1J","^10",["^11",["^12",["^11",[["~$G__57406"]]]]]],"^;","~$dat.remote.impl.sente/map->SenteRemote","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",23,"^18",["^11",[["^2H"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",1,"^1H",true,"^1I","^1J","^X",80,"^Z",80,"^17",1,"^1<",true,"^10",["^11",["^12",["^11",[["^2H"]]]]]],"~$recv-ev-msg->seg",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",27,"^Y",7,"^Z",27,"^[",23,"^10",["^11",["^12",["^11",[["~$ev-msg"]]]]],"^14","In exchange for this overhead we get send/recv using the same universal-namespaced-segment-maps."],"^;","~$dat.remote.impl.sente/recv-ev-msg->seg","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",23,"^18",["^11",[["^2K"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",1,"^X",27,"^Z",27,"^17",1,"^1<",true,"^10",["^11",["^12",["^11",[["^2K"]]]]],"^14","In exchange for this overhead we get send/recv using the same universal-namespaced-segment-maps."],"~$ring-handlers",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",221,"^Y",7,"^Z",221,"^[",20,"^10",["^11",["^12",["^11",[["~$ws-connection"]]]]]],"^;","~$dat.remote.impl.sente/ring-handlers","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",20,"^18",["^11",[["^2N"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",1,"^X",221,"^Z",221,"^17",1,"^1<",true,"^10",["^11",["^12",["^11",[["^2N"]]]]]],"~$DBFn",["^ ","^1N",3,"^1O",["^:",["^1P","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1[","^20","^22","^23","^25","^26"]],"^;","~$dat.remote.impl.sente/DBFn","^W","src/cljc/dat/remote/impl/sente.cljc","^[",22,"^28",true,"^Y",18,"^1H",true,"^X",23,"^29",true,"^Z",23,"^2:",["^:",["^1P","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1[","^22","^23","^25","^26"]]],"~$send-ev->seg",["^ ","^U",null,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",47,"^Y",7,"^Z",47,"^[",19,"^10",["^11",["^12",["^11",[["~$ev"]]]]],"^14","Make sure all vector events are converted into universal-namespaced-segment-maps"],"^;","~$dat.remote.impl.sente/send-ev->seg","^16",false,"^W","src/cljc/dat/remote/impl/sente.cljc","^[",19,"^18",["^11",[["^2S"]]],"^1;",null,"^19",["^11",[null,null]],"^Y",1,"^X",47,"^Z",47,"^17",1,"^1<",true,"^10",["^11",["^12",["^11",[["^2S"]]]]],"^14","Make sure all vector events are converted into universal-namespaced-segment-maps"],"~$default-sente-options",["^ ","^;","~$dat.remote.impl.sente/default-sente-options","^W","src/cljc/dat/remote/impl/sente.cljc","^X",57,"^Y",1,"^Z",57,"^[",27,"^V",["^ ","^W","/home/bamarco/dev/datsync/src/cljc/dat/remote/impl/sente.cljc","^X",57,"^Y",6,"^Z",57,"^[",27],"~:tag","^25"]],"~:require-macros",["^ ","~$async-macros","^7","^7","^7","^D","^E","^E","^E","^?","^@","^@","^@"],"~:cljs.analyzer/constants",["^ ","~:seen",["^:",["~:ajax-post-fn","~:sente-sock","~:dat.remote.impl.sente/event","~:first-open?","~:chsk/recv","~:ch-recv","~:client-id","~:dat.remote.impl.sente/segment","~:else","~:connected-uids","^1A","~:uid","~:packer","~:chsk/ws-ping","~$db/fn","~:sente-options","~:params","~:ring-handlers","~:recur","~:dat.remote/ring-req","~:chsk/state","~:debug","~:stop-remote","~:dat.reactor/event","~:ajax-get-or-ws-handshake-fn","~:dat.remote/connected","~:lang","~:dat.reactor/legacy","^2B","^2>","~:event","~:user-id-fn","~:id","~:recv>","^2D","~:server?","~:info","~:code","~:send>","~:ring-req","^2=","~:wrap-recv-evs?","~:?data","~:error","~:send-fn","^2C","~:chsk-route","~:dat.remote/peer-id","^2E","~:auto","~:p","^1>","^2?","~:chsk/handshake","~:any"]],"~:order",["^3I","^3?","^3Q","^2=","^2>","^2?","^3=","^3M","^3U","^3S","^3:","^37","^3B","^3Y","^3F","^3J","^3K","^3X","^3L","^3T","^3;","^36","^3W","^39","^3A","^40","^38","^3>","^3R","^3N","^31","^3E","^3O","^3G","^30","^3P","~:p","^3Z","^35","^3V","^3D","^2B","^1>","^2C","^1A","^2D","^2E","^32","^3C","^33","^3H","^3<","^3[","^34","^3@"]],"^14",null]