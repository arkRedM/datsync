["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Object",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros","~$go-loop","^7"],"~:excludes",["~#set",[]],"~:name","~$dat.sync.client","~:imports",null,"~:requires",["^ ","~$log","~$taoensso.timbre","~$dat.remote","^A","~$reactor","~$dat.reactor","~$remote","^A","~$async","~$cljs.core.async","^F","^F","~$datascript.core","^G","~$com.stuartsierra.component","^H","~$dispatcher","~$dat.reactor.dispatcher","^C","^C","~$component","^H","~$dat.sync.utils","^L","^@","^@","~$utils","^L","^J","^J","~$d","^G"],"~:uses",null,"~:defs",["^ ","~$Datsync",["^ ","~:num-fields",2,"~:protocols",["^:",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$com.stuartsierra.component/Lifecycle","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^;","~$dat.sync.client/Datsync","~:file","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","~:end-column",19,"~:type",true,"~:column",12,"~:internal-ctor",true,"~:line",760,"~:record",true,"~:end-line",760,"~:skip-protocol-flag",["^:",["^S","^T","^U","^V","^W","^X","^Y","^Z","^[","^11","^12","^14","^15"]]],"~$new-datsync",["^ ","~:protocol-inline",null,"~:meta",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",777,"^1:",7,"^1>",777,"^18",18,"~:arglists",["~#list",["~$quote",["^1D",[[]]]]]],"^;","~$dat.sync.client/new-datsync","~:variadic",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",18,"~:method-params",["^1D",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^1D",[null,null]],"^1:",1,"^1<",777,"^1>",777,"~:max-fixed-arity",0,"~:fn-var",true,"^1C",["^1D",["^1E",["^1D",[[]]]]]],"~$replace-schema",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",221,"^1:",7,"^1>",221,"^18",21,"^1C",["^1D",["^1E",["^1D",[["~$db","~$schema"]]]]]],"^;","~$dat.sync.client/replace-schema","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",21,"^1H",["^1D",[["^1N","^1O"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",221,"^1>",221,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^1O"]]]]]],"~$datom-tx-form",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",466,"^1:",7,"^1>",466,"^18",20,"^1C",["^1D",["^1E",["^1D",[["~$datom"]]]]]],"^;","~$dat.sync.client/datom-tx-form","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",20,"^1H",["^1D",[["^1R"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",466,"^1>",466,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1R"]]]]]],"~$globalize-tx-report",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",635,"^1:",7,"^1>",635,"^18",26,"^1C",["^1D",["^1E",["^1D",[["~$tx-report"],[["^ ","~:keys",["~$db-before","~$tx-data"]],"~$opts"]]]]],"~:doc","Convenience function for globalizing a set of datoms from a tx report","~:top-fn",["^ ","^1G",false,"^1K",2,"^1H",["^1D",[["^1U"],[["^ ","^1V",["^1W","^1X"]],"^1Y"]]],"^1C",["^1D",[["^1U"],[["^ ","^1V",["^1W","^1X"]],"^1Y"]]],"^1J",["^1D",[null,null]]]],"^;","~$dat.sync.client/globalize-tx-report","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",26,"^1[",["^ ","^1G",false,"^1K",2,"^1H",["^1D",[["^1U"],[["^ ","^1V",["^1W","^1X"]],"^1Y"]]],"^1C",["^1D",[["^1U"],[["^ ","^1V",["^1W","^1X"]],"^1Y"]]],"^1J",["^1D",[null,null]]],"^1H",["^1D",[["^1U"],[["^ ","^1V",["^1W","^1X"]],"^1Y"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",635,"^1>",635,"^1K",2,"^1L",true,"^1C",["^1D",[["^1U"],[["^ ","^1V",["^1W","^1X"]],"^1Y"]]],"^1Z","Convenience function for globalizing a set of datoms from a tx report"],"~$map->Datsync",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",760,"^1:",12,"^1>",760,"^18",19,"^1;",true,"~:factory","~:map","^1C",["^1D",["^1E",["^1D",[["~$G__53588"]]]]]],"^;","~$dat.sync.client/map->Datsync","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",19,"^1H",["^1D",[["^24"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1;",true,"^22","^23","^1<",760,"^1>",760,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^24"]]]]]],"~$make-eid-mapping",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",365,"^1:",7,"^1>",365,"^18",23,"^1C",["^1D",["^1E",["^1D",[["^1N","~$tx"]]]]],"^1Z","Creates a map of remote eids to local eids for any id in the tx, providing consistent tempids where needed"],"^;","~$dat.sync.client/make-eid-mapping","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",23,"^1H",["^1D",[["^1N","^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",365,"^1>",365,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Creates a map of remote eids to local eids for any id in the tx, providing consistent tempids where needed"],"^1O",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",112,"^1:",7,"^1>",112,"^18",13,"^1C",["^1D",["^1E",["^1D",[["^1N"]]]]]],"^;","~$dat.sync.client/schema","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",13,"^1H",["^1D",[["^1N"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",112,"^1>",112,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N"]]]]]],"~$normalized-tx-form",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",56,"^1:",7,"^1>",56,"^18",25,"^1C",["^1D",["^1E",["^1D",[["~$tx-form"]]]]]],"^;","~$dat.sync.client/normalized-tx-form","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",25,"^1H",["^1D",[["^2;"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",56,"^1>",56,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^2;"]]]]]],"~$schema-with-changes",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",174,"^1:",7,"^1>",174,"^18",26,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Takes the schema related tx-forms from an import tx (as given to us via the output of tx-schema-changes) and returns\n  the merge of this schema data into the db's existing schema definition."],"^;","~$dat.sync.client/schema-with-changes","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",26,"^1H",["^1D",[["^1N","^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",174,"^1>",174,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Takes the schema related tx-forms from an import tx (as given to us via the output of tx-schema-changes) and returns\n  the merge of this schema data into the db's existing schema definition."],"~$base-schema",["^ ","^;","~$dat.sync.client/base-schema","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",78,"^1:",1,"^1>",78,"^18",17,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",78,"^1:",6,"^1>",78,"^18",17],"^1Z","The base satsync schema","~:tag","^14"],"~$get-or-assign-local-eid",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",289,"^1:",7,"^1>",289,"^18",30,"^1C",["^1D",["^1E",["^1D",[["^1N","~$current-mapping","~$eid"]]]]]],"^;","~$dat.sync.client/get-or-assign-local-eid","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",30,"^1H",["^1D",[["^1N","^2C","^2D"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",289,"^1>",289,"^1K",3,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^2C","^2D"]]]]]],"~$update-schema!",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",458,"^1:",7,"^1>",458,"^18",21,"^1C",["^1D",["^1E",["^1D",[["~$conn","~$schema-spec"]]]]],"^1Z","Update schema using a DataScript friendly schema-spec"],"^;","~$dat.sync.client/update-schema!","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",21,"^1H",["^1D",[["^2G","^2H"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",458,"^1>",458,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^2G","^2H"]]]]],"^1Z","Update schema using a DataScript friendly schema-spec"],"~$schema-attrs-by",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",561,"^1:",7,"^1>",561,"^18",22,"^1C",["^1D",["^1E",["^1D",[["^1N","~$attr-or-fn","~$value"]]]]]],"^;","~$dat.sync.client/schema-attrs-by","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",22,"^1H",["^1D",[["^1N","^2K","^2L"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",561,"^1>",561,"^1K",3,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^2K","^2L"]]]]]],"~$normalized-tx-map-form",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",29,"^1:",7,"^1>",29,"^18",29,"^1C",["^1D",["^1E",["^1D",[["~$m"]]]]],"^1Z","Takes a transaction map form and translates it into a collection of list forms"],"^;","~$dat.sync.client/normalized-tx-map-form","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",29,"^1H",["^1D",[["~$m"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",29,"^1>",29,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["~$m"]]]]],"^1Z","Takes a transaction map form and translates it into a collection of list forms"],"~$schema-idents",["^ ","^;","~$dat.sync.client/schema-idents","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",100,"^1:",1,"^1>",100,"^18",19,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",100,"^1:",6,"^1>",100,"^18",19],"^2A","~$cljs.core/IVector"],"~$normalized-tx-list-form",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",46,"^1:",7,"^1>",46,"^18",30,"^1C",["^1D",["^1E",["^1D",[["~$op","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]]]],"^1Z","Takes a transaction list form and normalizes it's values, such that any maps or collections are expanded\n  into list forms and concat'd onto the argument list form.","^1[",["^ ","^1G",false,"^1K",4,"^1H",["^1D",[["^2T","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]],"^1C",["^1D",[["^2T","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]],"^1J",["^1D",[null,null]]]],"^;","~$dat.sync.client/normalized-tx-list-form","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",30,"^1[",["^ ","^1G",false,"^1K",4,"^1H",["^1D",[["^2T","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]],"^1C",["^1D",[["^2T","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]],"^1J",["^1D",[null,null]]],"^1H",["^1D",[["^2T","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",46,"^1>",46,"^1K",4,"^1L",true,"^1C",["^1D",[["^2T","~$e","~$a","~$v"],[["^2T","~$e","~$a","~$v"]]]],"^1Z","Takes a transaction list form and normalizes it's values, such that any maps or collections are expanded\n  into list forms and concat'd onto the argument list form."],"~$tx-metadata",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",274,"^1:",7,"^1>",274,"^18",18,"^1C",["^1D",["^1E",["^1D",[[["^ ","~:as","^1U","^1V",["^1W","~$db-after","^1X","~$tempids","~$tx-meta"]]]]]]],"^1Z","Given a tx-report, return transaction representing metadata about the transaction"],"^;","~$dat.sync.client/tx-metadata","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",18,"^1H",["^1D",[["~$p__53406"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",274,"^1>",274,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[[["^ ","^2W","^1U","^1V",["^1W","^2X","^1X","^2Y","^2Z"]]]]]]],"^1Z","Given a tx-report, return transaction representing metadata about the transaction"],"~$schema-query",["^ ","^;","~$dat.sync.client/schema-query","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",105,"^1:",1,"^1>",105,"^18",18,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",105,"^1:",6,"^1>",105,"^18",18],"^2A","^2R"],"~$apply-tx-data!",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",475,"^1:",7,"^1>",475,"^18",21,"^1C",["^1D",["^1E",["^1D",[["^2G","^1X"]]]]],"^1Z","Apply tx-data datom vectors in [e a v t b] form. Wraps in wrap-remote-tx middleware via apply-remote-tx!"],"^;","~$dat.sync.client/apply-tx-data!","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",21,"^1H",["^1D",[["^2G","^1X"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",475,"^1>",475,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^2G","^1X"]]]]],"^1Z","Apply tx-data datom vectors in [e a v t b] form. Wraps in wrap-remote-tx middleware via apply-remote-tx!"],"~$transact-with-middleware!",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",253,"^1:",16,"^1>",253,"^18",41,"~:export",true,"^1C",["^1D",["^1E",["^1D",[["^2G","~$middleware-fn","^1X"],["^2G","^37","^1X","^2Z"]]]]],"^1Z","We need to override the d/transact! function so we can insert transaction middleware that automatically adds\n  our tx metadata for us. We shouldn't have to think about this; it should be transparent, and we should be keeping\n  track of where data originated from, etc.","^1[",["^ ","^1G",false,"^1K",4,"^1H",["^1D",[["^2G","^37","^1X"],["^2G","^37","^1X","^2Z"]]],"^1C",["^1D",[["^2G","^37","^1X"],["^2G","^37","^1X","^2Z"]]],"^1J",["^1D",[null,null]]]],"^;","~$dat.sync.client/transact-with-middleware!","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",41,"^1[",["^ ","^1G",false,"^1K",4,"^1H",["^1D",[["^2G","^37","^1X"],["^2G","^37","^1X","^2Z"]]],"^1C",["^1D",[["^2G","^37","^1X"],["^2G","^37","^1X","^2Z"]]],"^1J",["^1D",[null,null]]],"^1H",["^1D",[["^2G","^37","^1X"],["^2G","^37","^1X","^2Z"]]],"^1I",null,"^36",true,"^1J",["^1D",[null,null]],"^1:",1,"^1<",253,"^1>",253,"^1K",4,"^1L",true,"^1C",["^1D",[["^2G","^37","^1X"],["^2G","^37","^1X","^2Z"]]],"^1Z","We need to override the d/transact! function so we can insert transaction middleware that automatically adds\n  our tx metadata for us. We shouldn't have to think about this; it should be transparent, and we should be keeping\n  track of where data originated from, etc."],"~$apply-schema-tx!",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",454,"^1:",7,"^1>",454,"^18",23,"^1C",["^1D",["^1E",["^1D",[["^2G","~$schema-tx"]]]]]],"^;","~$dat.sync.client/apply-schema-tx!","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",23,"^1H",["^1D",[["^2G","^3:"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",454,"^1>",454,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^2G","^3:"]]]]]],"~$wrap-remote-tx",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",421,"^1:",7,"^1>",421,"^18",21,"^1C",["^1D",["^1E",["^1D",[["^1N","^27","~$other-tx-meta"]]]]],"^1Z","Here we add data we need to track the origin of the data (that we don't need to )"],"^;","~$dat.sync.client/wrap-remote-tx","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",21,"^1H",["^1D",[["^1N","^27","^3="]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",421,"^1>",421,"^1K",3,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27","^3="]]]]],"^1Z","Here we add data we need to track the origin of the data (that we don't need to )"],"~$remote-tx",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",500,"^1:",7,"^1>",500,"^18",16,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]]],"^;","~$dat.sync.client/remote-tx","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",16,"^1H",["^1D",[["^1N","^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",500,"^1>",500,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]]],"~$replace-ident",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",108,"^1:",7,"^1>",108,"^18",20,"^1C",["^1D",["^1E",["^1D",[["~$entity","~$attr"]]]]]],"^;","~$dat.sync.client/replace-ident","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",20,"^1H",["^1D",[["^3B","^3C"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",108,"^1>",108,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^3B","^3C"]]]]]],"~$datomic-tx",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",537,"^1:",20,"^1>",537,"^18",30,"~:deprecated",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Calls out to the remote-tx function; Deprecated."],"^;","~$dat.sync.client/datomic-tx","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",30,"^1H",["^1D",[["^1N","^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",537,"^3F",true,"^1>",537,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Calls out to the remote-tx function; Deprecated."],"~$ident-pulls",["^ ","^;","~$dat.sync.client/ident-pulls","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",102,"^1:",1,"^1>",102,"^18",17,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",102,"^1:",6,"^1>",102,"^18",17],"^2A","~$any"],"~$normalize-tx",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",64,"^1:",7,"^1>",64,"^18",19,"^1C",["^1D",["^1E",["^1D",[["^27"]]]]],"^1Z","Normalizes a transaction specification such that any map or :db.cardinality/many collection forms are expanded into list form"],"^;","~$dat.sync.client/normalize-tx","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",19,"^1H",["^1D",[["^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",64,"^1>",64,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^27"]]]]],"^1Z","Normalizes a transaction specification such that any map or :db.cardinality/many collection forms are expanded into list form"],"~$globalize-datoms",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",571,"^1:",7,"^1>",571,"^18",23,"^1C",["^1D",["^1E",["^1D",[["^1W","~$datoms",["^ ","^1V",["~$identity-attrs"]]]]]]]],"^;","~$dat.sync.client/globalize-datoms","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",23,"^1H",["^1D",[["^1W","^3N","~$p__53535"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",571,"^1>",571,"^1K",3,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1W","^3N",["^ ","^1V",["^3O"]]]]]]]],"~$apply-remote-tx!",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",432,"^1:",7,"^1>",432,"^18",23,"^1C",["^1D",["^1E",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]]]],"~:todo","Handle errors inside the transaction function. Should trust datomic, but fallback is a good idea.","^1[",["^ ","^1G",false,"^1K",3,"^1H",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]],"^1C",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]],"^1J",["^1D",[null,null]]]],"^;","~$dat.sync.client/apply-remote-tx!","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",23,"^1[",["^ ","^1G",false,"^1K",3,"^1H",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]],"^1C",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]],"^1J",["^1D",[null,null]]],"^1H",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",432,"^3S","Handle errors inside the transaction function. Should trust datomic, but fallback is a good idea.","^1>",432,"^1K",3,"^1L",true,"^1C",["^1D",[["^2G","^27"],["^2G","^27","^2Z"]]]],"~$datoms-as-tx",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",471,"^1:",7,"^1>",471,"^18",19,"^1C",["^1D",["^1E",["^1D",[["^3N"]]]]]],"^;","~$dat.sync.client/datoms-as-tx","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",19,"^1H",["^1D",[["^3N"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",471,"^1>",471,"^1K",1,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^3N"]]]]]],"~$translate-eids",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",389,"^1:",7,"^1>",389,"^18",21,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Takes a tx in canonical form and changes any incoming eids (including reference ids (WIP XXX)) to equivalents consistent with the local db. It does this\n  by looking for a match to an existing :dat.sync.remote.db/id. If it doesn't find one, it matches it with a negative one\n  and adds an [:db/add eid :dat.sync.remote.db/id _] statement to the tx."],"^;","~$dat.sync.client/translate-eids","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",21,"^1H",["^1D",[["^1N","^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",389,"^1>",389,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Takes a tx in canonical form and changes any incoming eids (including reference ids (WIP XXX)) to equivalents consistent with the local db. It does this\n  by looking for a match to an existing :dat.sync.remote.db/id. If it doesn't find one, it matches it with a negative one\n  and adds an [:db/add eid :dat.sync.remote.db/id _] statement to the tx."],"~$ref-ident-or-value",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",153,"^1:",7,"^1>",153,"^18",25,"^1C",["^1D",["^1E",["^1D",[["^1N","^3C","~$v"]]]]]],"^;","~$dat.sync.client/ref-ident-or-value","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",25,"^1H",["^1D",[["^1N","^3C","~$v"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",153,"^1>",153,"^1K",3,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^3C","~$v"]]]]]],"~$comp-tx-middleware",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",215,"^1:",7,"^1>",215,"^18",25,"^1C",["^1D",["^1E",["^1D",[["^1N","~$fns"]]]]]],"^;","~$dat.sync.client/comp-tx-middleware","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",25,"^1H",["^1D",[["^1N","^40"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",215,"^1>",215,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^40"]]]]]],"~$-transact-with-middleware!",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",228,"^1:",7,"^1>",228,"^18",33,"^1C",["^1D",["^1E",["^1D",[["^2G","^37","^1X","^2Z"]]]]]],"^;","~$dat.sync.client/-transact-with-middleware!","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",33,"^1H",["^1D",[["^2G","^37","^1X","^2Z"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",228,"^1>",228,"^1K",4,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^2G","^37","^1X","^2Z"]]]]]],"~$->Datsync",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",760,"^1:",12,"^1>",760,"^18",19,"^1;",true,"^22","~:positional","^1C",["^1D",["^1E",["^1D",[["^I","^D"]]]]]],"^;","~$dat.sync.client/->Datsync","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",19,"^1H",["^1D",[["^I","^D"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1;",true,"^22","^45","^1<",760,"^1>",760,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^I","^D"]]]]]],"~$tx-schema-changes",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",128,"^1:",7,"^1>",128,"^18",24,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"],["^27"]]]]],"^1Z","Extracts the schema (presently defined as anything with an :db/ident attribute) from the translation tx, or if a db is specified,\n  it's schema is used. It's assumed here the ","^1[",["^ ","^1G",false,"^1K",2,"^1H",["^1D",[["^1N","^27"],["^27"]]],"^1C",["^1D",[["^1N","^27"],["^27"]]],"^1J",["^1D",[null,null]]]],"^;","~$dat.sync.client/tx-schema-changes","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",24,"^1[",["^ ","^1G",false,"^1K",2,"^1H",["^1D",[["^1N","^27"],["^27"]]],"^1C",["^1D",[["^1N","^27"],["^27"]]],"^1J",["^1D",[null,null]]],"^1H",["^1D",[["^1N","^27"],["^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",128,"^1>",128,"^1K",2,"^1L",true,"^1C",["^1D",[["^1N","^27"],["^27"]]],"^1Z","Extracts the schema (presently defined as anything with an :db/ident attribute) from the translation tx, or if a db is specified,\n  it's schema is used. It's assumed here the "],"~$get-ref-attrs-for-mapping",["^ ","^1A",null,"^1B",["^ ","^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^1<",307,"^1:",7,"^1>",307,"^18",32,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Returns all reference attribute idents that exist in database ..."],"^;","~$dat.sync.client/get-ref-attrs-for-mapping","^1G",false,"^17","/home/bamarco/dev/datsync/src/cljc/dat/sync/client.cljc","^18",32,"^1H",["^1D",[["^1N","^27"]]],"^1I",null,"^1J",["^1D",[null,null]],"^1:",1,"^1<",307,"^1>",307,"^1K",2,"^1L",true,"^1C",["^1D",["^1E",["^1D",[["^1N","^27"]]]]],"^1Z","Returns all reference attribute idents that exist in database ..."]],"~:require-macros",["^ ","~$async-macros","^7","^7","^7","^?","^@","^@","^@"],"~:cljs.analyzer/constants",["^ ","~:seen",["^:",["~$remote-value-trans","~:dat.reactor/local-tx","~:dat.sync/sync?","~:remote","~:find","~:tempids","~:e/type","~:schema","~$get-else","~:optiq/last","~:dat.sync.client/bootstrap","~$?type-ident","~$?a","~:attribute.ref/types","~:dat.sync/remote","~:db.unique/identity","~$pull","~$?ref-type","~$?attr","~:where","~$<","~:db/unique","~$attr-type-ident","~:dat.sync.client/apply-schema-changes","~:else","~$?dat-e","~:db-after","^D","~:db/valueType","~:dat.sync/diff","~$*","~:db.type/ref","~:dat.sync.client/merge-schema","~:dat.sync.remote.db/id","~$?vt","~:dat.reactor/dispatch!","~$?ref-type-remote-eid","~$not=","~:recur","~:dispatcher","~:debug","~:dat.sync.client/request-bootstrap","~$ground","~$>","~$_","~$%","~:eavt","~$?attr-ident","~:dat.remote/connected","~:db-before","~:tx-data","~:db/retract","~$?v","^I","~$?ds-v","~$?atrr-ident","~$?attr-value-type","~$$","~:db/current-tx","~:dat.sync.prov/agent","~:dat.sync.remote/tx","~$?op","~:identity-attrs","~:db/cardinality","~$?val-ident","~:db/doc","~:info","~:db/id","~:dat.sync.client/recv-remote-tx","~:db/ident","~:dat.sync.client.bootstrap/complete?","~:error","~:dat.sync.tx/origin","~:dat.sync.client/send-remote-tx","~:db/add","~$.","~$?dat-v","~:tx-meta","~:db.cardinality/many","~$?remote-v","~$is-ref","~$?vt-ident","~$...","~:dat.sync.remote.db/valueType","~:dat.remote/send-event!","~:auto","~:p","~:listeners","~$?val","~$?e","~:dat.sync/route","~$?id","~:in"]],"~:order",["^5N","^5U","^5R","~:p","^63","^4V","^4E","^4L","^4S","^4Y","^4Z","^51","^5J","^5S","^67","^4[","^5X","^5L","^4N","^5P","^4C","^4O","^66","~$*","^60","^4R","^61","^4Q","~$.","^5<","^5D","^69","~$$","^5K","^65","^5M","^4H","^4F","^5;","^4X","^64","^5>","^5?","^4D","^5W","^5E","^4A","^68","^54","^4P","^58","~$_","^5F","^4M","^5@","^5H","^4W","^4K","^5V","~$%","^5A","^4G","^4?","^4T","^4J","^52","^5Z","^5B","^5Y","~$>","~$<","^5:","^5C","^5[","^55","^5I","^4U","^50","^5O","^4@","^5T","^62","^5G","^5=","^59","^4I","^53","^5Q","^57","^4B","^56","^I","^D"]],"^1Z","# Datsync client API"]