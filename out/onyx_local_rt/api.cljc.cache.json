["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$onyx-local-rt.api","~:imports",null,"~:requires",["^ ","~$dep","~$com.stuartsierra.dependency","^<","^<","~$i","~$onyx-local-rt.impl","^=","^=","~$onyx.spec","^>"],"~:uses",null,"~:defs",["^ ","~$init",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","~:line",6,"~:column",7,"~:end-line",6,"~:end-column",11,"~:arglists",["~#list",["~$quote",["^J",[[["^ ","~:keys",["~$workflow"],"~:as","~$job"]]]]]],"~:doc","Takes an Onyx job and returns a new runtime instance."],"^7","~$onyx-local-rt.api/init","~:variadic",false,"^D","out/onyx_local_rt/api.cljc","^H",11,"~:method-params",["^J",[["~$p__39830"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^F",1,"^E",6,"^G",6,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[[["^ ","^L",["^M"],"^N","^O"]]]]]],"^P","Takes an Onyx job and returns a new runtime instance."],"~$tick",["^ ","^B",null,"^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",15,"^F",7,"^G",15,"^H",11,"^I",["^J",["^K",["^J",[["~$env","~$n"],["^Z"]]]]],"^P","Advances the runtime one step in the lifecycle forward for all tasks.","~:top-fn",["^ ","^R",false,"^W",2,"^S",["^J",[["^Z","~$n"],["^Z"]]],"^I",["^J",[["^Z","~$n"],["^Z"]]],"^V",["^J",[null,null]]]],"^7","~$onyx-local-rt.api/tick","^R",false,"^D","out/onyx_local_rt/api.cljc","^H",11,"^[",["^ ","^R",false,"^W",2,"^S",["^J",[["^Z","~$n"],["^Z"]]],"^I",["^J",[["^Z","~$n"],["^Z"]]],"^V",["^J",[null,null]]],"^S",["^J",[["^Z","~$n"],["^Z"]]],"^U",null,"^V",["^J",[null,null]],"^F",1,"^E",15,"^G",15,"^W",2,"^X",true,"^I",["^J",[["^Z","~$n"],["^Z"]]],"^P","Advances the runtime one step in the lifecycle forward for all tasks."],"~$drained?",["^ ","^B",null,"^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",26,"^F",7,"^G",26,"^H",15,"^I",["^J",["^K",["^J",[["^Z"]]]]],"^P","Returns true if there are no in-flight segments."],"^7","~$onyx-local-rt.api/drained?","^R",false,"^D","out/onyx_local_rt/api.cljc","^H",15,"^S",["^J",[["^Z"]]],"^U",null,"^V",["^J",[null,null]],"^F",1,"^E",26,"^G",26,"^W",1,"^X",true,"^I",["^J",["^K",["^J",[["^Z"]]]]],"^P","Returns true if there are no in-flight segments."],"~$drain",["^ ","^B",null,"^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",35,"^F",7,"^G",35,"^H",12,"^I",["^J",["^K",["^J",[["^Z"],["^Z","~$max-ticks"]]]]],"^P","Calls `tick` until there are no more in-flight segments. Will only\n  call `tick` 10,000 times, or a user-given number of times, to prevent\n  an infinite-loop in the case of a problematic job.","^[",["^ ","^R",false,"^W",2,"^S",["^J",[["^Z"],["^Z","^14"]]],"^I",["^J",[["^Z"],["^Z","^14"]]],"^V",["^J",[null,null]]]],"^7","~$onyx-local-rt.api/drain","^R",false,"^D","out/onyx_local_rt/api.cljc","^H",12,"^[",["^ ","^R",false,"^W",2,"^S",["^J",[["^Z"],["^Z","^14"]]],"^I",["^J",[["^Z"],["^Z","^14"]]],"^V",["^J",[null,null]]],"^S",["^J",[["^Z"],["^Z","^14"]]],"^U",null,"^V",["^J",[null,null]],"^F",1,"^E",35,"^G",35,"^W",2,"^X",true,"^I",["^J",[["^Z"],["^Z","^14"]]],"^P","Calls `tick` until there are no more in-flight segments. Will only\n  call `tick` 10,000 times, or a user-given number of times, to prevent\n  an infinite-loop in the case of a problematic job."],"~$env-summary",["^ ","^B",null,"^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",54,"^F",7,"^G",54,"^H",18,"^I",["^J",["^K",["^J",[["^Z"]]]]],"^P","Returns a subset of the runtime to explain where segments are currently located in the job."],"^7","~$onyx-local-rt.api/env-summary","^R",false,"^D","out/onyx_local_rt/api.cljc","^H",18,"^S",["^J",[["^Z"]]],"^U",null,"^V",["^J",[null,null]],"^F",1,"^E",54,"^G",54,"^W",1,"^X",true,"^I",["^J",["^K",["^J",[["^Z"]]]]],"^P","Returns a subset of the runtime to explain where segments are currently located in the job."],"~$transition-env",["^ ","^7","~$onyx-local-rt.api/transition-env","^D","out/onyx_local_rt/api.cljc","^E",77,"^F",1,"^G",77,"^H",25,"^P","Data-backed API for transitioning the environment.","^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",77,"^F",11,"^G",77,"^H",25,"^P","Data-backed API for transitioning the environment."],"~:tag","~$cljs.core/MultiFn"],"~$new-segment",["^ ","^B",null,"^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",93,"^F",7,"^G",93,"^H",18,"^I",["^J",["^K",["^J",[["^Z","~$input-task","~$segment"]]]]],"^P","Given a runtime, places the segment onto\n   the inbox of the specified task. Does not call `tick`\n   or advance the runtime in any way."],"^7","~$onyx-local-rt.api/new-segment","^R",false,"^D","out/onyx_local_rt/api.cljc","^H",18,"^S",["^J",[["^Z","^1=","^1>"]]],"^U",null,"^V",["^J",[null,null]],"^F",1,"^E",93,"^G",93,"^W",3,"^X",true,"^I",["^J",["^K",["^J",[["^Z","^1=","^1>"]]]]],"^P","Given a runtime, places the segment onto\n   the inbox of the specified task. Does not call `tick`\n   or advance the runtime in any way."],"~$stop",["^ ","^B",null,"^C",["^ ","^D","/home/bamarco/dev/datsync/out/onyx_local_rt/api.cljc","^E",102,"^F",7,"^G",102,"^H",11,"^I",["^J",["^K",["^J",[["^Z"]]]]],"^P","Stops and returns the runtime, simulating the behavior of a\n   distributed peer stopping. It is valid to call `tick` after\n   `stop` to simulate the job starting again."],"^7","~$onyx-local-rt.api/stop","^R",false,"^D","out/onyx_local_rt/api.cljc","^H",11,"^S",["^J",[["^Z"]]],"^U",null,"^V",["^J",[null,null]],"^F",1,"^E",102,"^G",102,"^W",1,"^X",true,"^I",["^J",["^K",["^J",[["^Z"]]]]],"^P","Stops and returns the runtime, simulating the behavior of a\n   distributed peer stopping. It is valid to call `tick` after\n   `stop` to simulate the job starting again."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:onyx.core/batch","~:inbox","~:new-segment","~:else","~:task","~:default","~:window-contents","~:onyx.core/task-map","~:onyx/type","~:lifecycle/start-task?","~:next-action","~:output","~:function","~:pending-writes","~:tasks","~:workflow","~:stop","~:event","~:segment","~:onyx.core/windows","~:outputs","~:lifecycle/after-task-stop","~:input","~:hierarchy","~:sorted-tasks"]],"~:order",["^1T","^1S","^21","^1R","^1O","^1N","^1F","^1E","^1V","^1H","^1L","^1X","^1M","^1[","^1Q","^1P","^1Y","^1K","^20","^1J","^1G","^1I","^1W","^1U","^1Z"]],"^P",null]